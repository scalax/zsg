@(tagNum: Int)(isDotty: Boolean)

package zsg

import scala.language.higherKinds

abstract class Context@{tagNum}[F[@{(1 to tagNum).map(_ => "_").mkString(" , ")}]] {

    def append[
        @{zsg.codegen.SnippetUtil.XI_Snippet(1 to tagNum).mkString("", " , ", ",")}
        @{zsg.codegen.SnippetUtil.YI_Snippet(1 to tagNum).mkString("", " , ", ",")}
        @{zsg.codegen.SnippetUtil.ZI_Snippet(1 to tagNum).mkString(" , ")}
    ](
        x: F[@{zsg.codegen.SnippetUtil.XI_Snippet(1 to tagNum).mkString(" , ")}],
        y: F[@{zsg.codegen.SnippetUtil.YI_Snippet(1 to tagNum).mkString(" , ")}]
    )(p: Plus@{tagNum}[
        @{zsg.codegen.SnippetUtil.XI_Snippet(1 to tagNum).mkString("", " , ", ",")}
        @{zsg.codegen.SnippetUtil.YI_Snippet(1 to tagNum).mkString("", " , ", ",")}
        @{zsg.codegen.SnippetUtil.ZI_Snippet(1 to tagNum).mkString(" , ")}
    ]): F[@{zsg.codegen.SnippetUtil.ZI_Snippet(1 to tagNum).mkString(" , ")}]

}